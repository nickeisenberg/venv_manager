#!/usr/bin/env bash


version_is_branch() {
    VERSION=$1

    case "$2" in
        --local)
            case "$3" in
                "true")
                    LOCAL=$3
                    ;;
                "false")
                    LOCAL=$3
                    ;;
                *)
                    echo "ERROR: version_is_branch --local must be true for false"
                    return 1
                    ;;
            esac
            ;;
        *)
            if [ -n "$2" ]; then
                echo "ERROR version_is_branch: invalid input $2"
                return 1
            fi
            ;;
    esac

    if [ -z $LOCAL ]; then
        echo "ERROR: version_is_branch --local is missing"
        return 1
    fi
    
    if $LOCAL; then
        current="$(pwd)"
        cd "$VENVMAN_CPYTHON_REPO_DIR"
        ITERABLE=$(eval "git branch -a")
        cd "$current"
        unset current
        CHECK="remotes/origin/${VERSION}"
    else
        ITERABLE=$(eval "git ls-remote --heads "${VENVMAN_CPYTHON_REMOTE_URL}"")
        CHECK="refs/heads/${VERSION}"
    fi

    # for branch in $(eval $ITERABLE); do
    for branch in $ITERABLE; do
        if ! $LOCAL; then
            branch=$(echo $branch | grep "refs/heads/${VERSION}")
        fi

        if [ "$branch" = $CHECK ]; then 
            return 0
        fi

    done
    return 1
}


version_is_branch "$@"
